# 加载所需的包
library(readr)
library(dplyr)
library(purrr)
setwd("D:/Sun/job/SEE_Online/Measuring_posit_self/4.Analysis/Analysis_data_Sunst/raw")
day0 <- read_csv("day0/day0_data.csv")
View(day0)
day0 <- read_csv("day0/day0_data.csv")
day1 <- read_csv("day1/day1_data.csv")
day2 <- read_csv("day2/day2_data.csv")
day3 <- read_csv("day3/day3_data.csv")
View(day1)
View(day3)
View(day3)
View(day0)
View(day0)
selfclarity_columns <- paste0("selfclarity_", seq(1, 12))
phq_columns <- paste0("phq_", seq(1, 9))
gad_columns <- paste0("gad_", seq(1, 7))
df_selected <- day0 %>%
select(one_of(c(IM_columns, sds_columns, sas_columns，ParticipantID)))
df_selected <- day0 %>%
select(one_of(c(IM_columns, sds_columns, sas_columns，"ParticipantID")))
# 选择列
df_selected <- day0 %>%
select(one_of(c(IM_columns, sds_columns, sas_columns, "ParticipantID")))
# 选择列
df_selected <- day0 %>%
select(one_of(c(selfclarity_columns , phq_columns, gad_columns, "ParticipantID")))
View(df_selected)
View(day1)
df_selected2 <- day1 %>%
select(one_of(c(1:7 ,)))
library(readr)
library(dplyr)
#加载数据
day1 <- read_csv("day1/day1_data.csv")
View(day1)
selected_data <- day1 %>% select(1:7)
View(selected_data)
View(day1)
selected_data1 <- day1 %>% select(c("subj_idx", "friend_name", "ParticipantID", "responses"))
View(selected_data1)
selected_data2 <- day1 %>% select(c("correct","screen_id","task_id","RT","condition","word","response_type","key_press","avg_frame_time","day","phase"))
View(selected_data2)
combined_data <- cbind(selected_data1, selected_data2, selected_data3)
combined_data <- cbind(selected_data, selected_data1, selected_data2)
View(combined_data)
unique_task_ids <- unique(combined_data$task_id)
unique_task_ids
View(combined_data)
IAT_data <- combined_data[combined_data$task_id %in% c("ability", "moral"), ]
View(IAT_data)
ALT_data <- combined_data[combined_data$task_id %in% c("ALT1_1","ALT1","ALT1_2"), ]
View(ALT_data)
day2 <- read_csv("day2/day2_data.csv")
View(day2)
write.csv(IAT_data , file = IAT_data , row.names = FALSE)
write.csv(IAT_data , file = "IAT_data.csv", row.names = FALSE )
write.csv(ALT_data , file = "ALT_data.csv", row.names = FALSE )
View(day2)
selected_data3 <- day2%>% select(1:8)
View(ALT_data)
selected_data4 <- day2 %>% select(c("friend_name","ParticipantID", "Sex","Word","Word2","responses"))
selected_data5 <- day2 %>% select(c("item_order","radio_event_ids", "radio_event_times","key_event_times","mouse_event_times",
"straightlining","zigzagging","honeypot","task_id","screen_id","time_stamp","response_type","key_press","avg_frame_time",
"center_x","center_y",	"person","word","valence",	"domain","math"	,"correct_response","correct"	,"status"	,"view_history",	"identity",	"duration",	"Image",	"condition"	,"question_order",	"ID"))
combined_data2 <- cbind(selected_data3, selected_data4, selected_data5)
View(combined_data2)
unique_task_ids <- unique(combined_data2$task_id)
unique_task_ids
SRET_data <- combined_data2[combined_data2$task_id %in% c("SRET_EW", "SRET" ,"SRET_math","SRET_RJ","SRET_end" ), ]
write.csv(SRET_data , file = "SRET_data.csv", row.names = FALSE )
ALT_data2 <- combined_data2[combined_data2$task_id %in% c("prac_ALT2_moral","prac_ALT2_ability","ALT2"), ]
write.csv(ALT_data2 , file = "ALT_data2.csv", row.names = FALSE )
View(SRET_data)
library(readr)
library(dplyr)
day0 <- read_csv("day0/day0_data.csv")
day1 <- read_csv("day1/day1_data.csv")
day2 <- read_csv("day2/day2_data.csv")
day3 <- read_csv("day3/day3_data.csv")
View(day0)
View(day1)
View(day0)
selfclarity_columns <- paste0("selfclarity_", seq(1, 12))
phq_columns <- paste0("phq_", seq(1, 9))
gad_columns <- paste0("gad_", seq(1, 7))
# 选择列
select_day0 <- day0 %>%
select(one_of(c(selfclarity_columns , phq_columns, gad_columns, "ParticipantID")))
View(select_day0)
View(day1)
select_day1 <- day1%>%
select(starts_with("ses_","coreself","SGPS","NPI","hsns"))
select_day1 <- day1%>%
select(starts_with("ses_","coreself","SGPS_","NPI","hsns_"))
select_day1 <- day1%>%
select(starts_with("ses_","coreself_","SGPS_","NPI","hsns_"))
select_day1 <- day1%>%
select(starts_with("ses_","coreself_"))
select_day1 <- day1%>%
select(one_of(c(ses_columns , coreself_columns, SGPS_columns,NPI_columns,hsns_columns, "ParticipantID")))
ses_columns <- paste0("selfclarity_", seq(1, 10))
coreself_columns <- paste0("coreself_", seq(1, 10))
SGPS_columns <- paste0("SGPS_", seq(1, 9))
NPI_columns <- paste0("NPI", seq(1, 15))
hsns_columns <- paste0("hsns_", seq(1, 10))
select_day1 <- day1%>%
select(one_of(c(ses_columns , coreself_columns, SGPS_columns,NPI_columns,hsns_columns, "ParticipantID")))
View(select_day1)
ses_columns <- paste0("ses_", seq(1, 10))
select_day1 <- day1%>%
select(one_of(c(ses_columns , coreself_columns, SGPS_columns,NPI_columns,hsns_columns, "ParticipantID")))
swb_columns <- paste0("swb_", seq(1, 5))
LOT_columns <- paste0("LOT_", seq(1, 6))
IPC_columns <- paste0("IPC", seq(1, 8))
MorIden_columns <- paste0("MorIden", seq(1, 10))
moralSeImag_columns <- paste0("moralSeImag_", seq(1, 9))
sde_columns <- paste0("sde_", seq(1, 20))
IM_columns <- paste0("IM_", seq(1, 20))
select_day2 <- day2%>%
select(one_of(c(swb_columns , LOT_columns, IPC_columns ,MorIden_columns,moralSeImag_columns,sde_columns,IM_columns,"ParticipantID" ,"ID")))
swb_columns <- paste0("swb_", seq(1, 5))
LOT_columns <- paste0("LOT_", seq(1, 6))
IPC_columns <- paste0("IPC_", seq(1, 8))
MorIden_columns <- paste0("MorIden_", seq(1, 10))
moralSeImag_columns <- paste0("moralSeImag_", seq(1, 9))
sde_columns <- paste0("sde_", seq(1, 20))
IM_columns <- paste0("IM_", seq(1, 20))
select_day2 <- day2%>%
select(one_of(c(swb_columns , LOT_columns, IPC_columns ,MorIden_columns,moralSeImag_columns,sde_columns,IM_columns,"ParticipantID" ,"ID")))
View(select_day2)
domain_rating_columns <- paste0("domain_rating_", seq(1, 5))
select_day3 <- day3%>%
select(one_of(c(selfclarity_columns , phq_columns, gad_columns,
ses_columns , coreself_columns, SGPS_columns,NPI_columns,hsns_columns,
swb_columns , LOT_columns, IPC_columns ,MorIden_columns,moralSeImag_columns,sde_columns,IM_columns,
domain_rating_columns,
"ParticipantID" ,"ID")))
library(readr)
day1_phase_003 <- read_csv("day1/phase_003/day1_phase_003.csv")
View(day1_phase_003)
library(dplyr)
View(day1_phase_003)
day1_phase_003 <- day1_phase_003 %>%
mutate(
ID = case_when(
ParticipantID == 671 ~ "phase_003_subj_13",
ParticipantID == 60 ~ "phase_003_subj_2",
ParticipantID == 470 ~ "phase_003_subj_10",
ParticipantID ==671~"phase_003_subj_13",
ParticipantID ==60~"phase_003_subj_2",
ParticipantID ==470~	"phase_003_subj_10",
ParticipantID ==148~	"phase_003_subj_4",
ParticipantID ==216	~"phase_003_subj_6",
ParticipantID ==693~	"phase_003_subj_15",
ParticipantID ==584~	"phase_003_subj_12",
ParticipantID ==178~	"phase_003_subj_5",
ParticipantID ==396~	"phase_003_subj_8",
ParticipantID ==403~	"phase_003_subj_9",
ParticipantID ==60~	"phase_003_subj_3",
ParticipantID == 569~	"phase_003_subj_11",
ParticipantID ==49~	"phase_003_subj_1",
ParticipantID ==681	~"phase_003_subj_14"
# 添加更多的条件
TRUE ~ NA_character_  # 如果没有匹配的，设置为NA
day1_phase_003 <- read_csv("day1/phase_003/day1_phase_003.csv")
day1_phase_003 <- day1_phase_003 %>%
mutate(
ID = case_when(
ParticipantID == 671 ~ "phase_003_subj_13",
ParticipantID == 60 ~ "phase_003_subj_2",
ParticipantID == 470 ~ "phase_003_subj_10",
ParticipantID ==671~"phase_003_subj_13",
ParticipantID ==60~"phase_003_subj_2",
ParticipantID ==470~	"phase_003_subj_10",
ParticipantID ==148~	"phase_003_subj_4",
ParticipantID ==216	~"phase_003_subj_6",
ParticipantID ==693~	"phase_003_subj_15",
ParticipantID ==584~	"phase_003_subj_12",
ParticipantID ==178~	"phase_003_subj_5",
ParticipantID ==396~	"phase_003_subj_8",
ParticipantID ==403~	"phase_003_subj_9",
ParticipantID ==60~	"phase_003_subj_3",
ParticipantID == 569~	"phase_003_subj_11",
ParticipantID ==49~	"phase_003_subj_1",
ParticipantID ==681	~"phase_003_subj_14"
# 添加更多的条件
TRUE ~ NA_character_  # 如果没有匹配的，设置为NA
day1_phase_003 <- day1_phase_003 %>%
mutate(
ID = case_when(
ParticipantID == 671 ~ "phase_003_subj_13",
ParticipantID == 60 ~ "phase_003_subj_2",
ParticipantID == 470 ~ "phase_003_subj_10",
ParticipantID ==671~"phase_003_subj_13",
ParticipantID ==60~"phase_003_subj_2",
ParticipantID ==470~	"phase_003_subj_10",
ParticipantID ==148~	"phase_003_subj_4",
ParticipantID ==216	~"phase_003_subj_6",
ParticipantID ==693~	"phase_003_subj_15",
ParticipantID ==584~	"phase_003_subj_12",
ParticipantID ==178~	"phase_003_subj_5",
ParticipantID ==396~	"phase_003_subj_8",
ParticipantID ==403~	"phase_003_subj_9",
ParticipantID ==60~	"phase_003_subj_3",
ParticipantID == 569~	"phase_003_subj_11",
ParticipantID ==49~	"phase_003_subj_1",
ParticipantID ==681	~"phase_003_subj_14",
TRUE ~ NA_character_
)
)
View(day1_phase_003)
View(day1_phase_003)
write_csv(day1_phase_003 , "day1/phase_003/day1_phase_003.csv")
library(readr)
library(dplyr)
library(purrr)
merge_data <- function(day, start_phase, end_phase) {
# 构造文件路径
file_paths <- map(start_phase:end_phase, function(phase) {
paste0(day, "/phase_", sprintf("%03d", phase), "/", day, "_phase_", sprintf("%03d", phase), ".csv")
})
# 读取和合并数据
# 假设所有CSV文件都有相同的列类型
# 如果不是这样，您需要根据实际情况调整col_types
col_types <- cols(
# 例如，如果income列应该是数字，但是有些文件中可能是字符
income = col_double(),
# 确保birthday列被读取为POSIXct类型
birthday = col_datetime(),
# 将correct列转换为逻辑型
correct = col_logical()
# 添加其他列的类型
)
# 读取数据并转换为统一的类型
data <- map_df(file_paths, function(file_path) {
data <- readr::read_csv(file_path, col_types = col_types)
phase_value <- as.numeric(gsub(".*phase_(\\d{3}).*", "\\1", file_path))
data <- mutate(data, day = day, phase = phase_value)
return(data)
})
return(data)
}
days <- c("day1")
#, "day1", "day2", "day3"
start_phase <- 3
end_phase <- 20
##3~20才是正式实验的数据
# 合并所有数据
combined_data <- map_df(days, ~ merge_data(.x, start_phase, end_phase))
View(combined_data)
write_csv(combined_data , "day1/day1_data.csv")
day1 <- read_csv("day1/day1_data.csv")
day2 <- read_csv("day2/day2_data.csv")
selected_data <- day1 %>% select(1:7)
selected_data1 <- day1 %>% select(c("subj_idx", "friend_name", "ParticipantID" ,"responses"))
selected_data2 <- day1 %>% select(c("correct","screen_id","task_id","RT","condition","word","response_type","key_press","avg_frame_time","day","phase","ID"))
combined_data <- cbind(selected_data, selected_data1, selected_data2)
unique_task_ids <- unique(combined_data$task_id)
IAT_data <- combined_data[combined_data$task_id %in% c("ability", "moral"), ]
write.csv(IAT_data , file = "IAT_data.csv", row.names = FALSE )
ALT_data <- combined_data[combined_data$task_id %in% c("ALT1_1","ALT1","ALT1_2"), ]
View(ALT_data)
write.csv(ALT_data , file = "ALT_data.csv", row.names = FALSE )
selected_data3 <- day2%>% select(1:8)
selected_data4 <- day2 %>% select(c("friend_name","ParticipantID", "Sex","Word","Word2","responses"))
selected_data5 <- day2 %>% select(c("item_order","radio_event_ids", "radio_event_times","key_event_times","mouse_event_times",
"straightlining","zigzagging","honeypot","task_id","screen_id","time_stamp","response_type","key_press","avg_frame_time",
"center_x","center_y",	"person","word","valence",	"domain","math"	,"correct_response","correct"	,"status"	,"view_history",
"identity",	"duration",	"Image",	"condition"	,"question_order",	"ID"))
combined_data2 <- cbind(selected_data3, selected_data4, selected_data5)
unique_task_ids <- unique(combined_data2$task_id)
SRET_data <- combined_data2[combined_data2$task_id %in% c("SRET_EW", "SRET" ,"SRET_math","SRET_RJ","SRET_end" ), ]
ALT_data2 <- combined_data2[combined_data2$task_id %in% c("prac_ALT2_moral","prac_ALT2_ability","ALT2"), ]
View(ALT_data)
day0 <- read_csv("clean_day0/merged_data0.csv")
setwd("D:/Sun/job/SEE_Online/Measuring_posit_self/4.Analysis/Analysis_data_Sunst/clean")
day0 <- read_csv("clean_day0/merged_data0.csv")
day1 <- read_csv("clean_day1/merged_data1.csv")
day2 <- read_csv("clean_day2/merged_data2.csv")
day3 <- read_csv("clean_day3/merged_data3.csv")
selfclarity_columns <- paste0("selfclarity_", seq(1, 12))
phq_columns <- paste0("phq_", seq(1, 9))
gad_columns <- paste0("gad_", seq(1, 7))
# 选择列
select_day0 <- day0 %>%
select(one_of(c(selfclarity_columns , phq_columns, gad_columns, "ID")))
ses_columns <- paste0("ses_", seq(1, 10))
coreself_columns <- paste0("coreself_", seq(1, 10))
SGPS_columns <- paste0("SGPS_", seq(1, 9))
NPI_columns <- paste0("NPI", seq(1, 15))
hsns_columns <- paste0("hsns_", seq(1, 10))
select_day1 <- day1%>%
select(one_of(c(ses_columns , coreself_columns, SGPS_columns,NPI_columns,hsns_columns, "ID")))
swb_columns <- paste0("swb_", seq(1, 5))
LOT_columns <- paste0("LOT_", seq(1, 6))
IPC_columns <- paste0("IPC_", seq(1, 8))
MorIden_columns <- paste0("MorIden_", seq(1, 10))
moralSeImag_columns <- paste0("moralSeImag_", seq(1, 9))
sde_columns <- paste0("sde_", seq(1, 20))
IM_columns <- paste0("IM_", seq(1, 20))
select_day2 <- day2%>%
select(one_of(c(swb_columns , LOT_columns, IPC_columns ,MorIden_columns,moralSeImag_columns,sde_columns,IM_columns,"ID")))
domain_rating_columns <- paste0("domain_rating_", seq(1, 5))
select_day3 <- day3%>%
select(one_of(c(selfclarity_columns , phq_columns, gad_columns,
ses_columns , coreself_columns, SGPS_columns,NPI_columns,hsns_columns,
swb_columns , LOT_columns, IPC_columns ,MorIden_columns,moralSeImag_columns,sde_columns,IM_columns,
domain_rating_columns,
"ID")))
write.csv(select_day0, file = "select_day0.csv", row.names = FALSE)
write.csv(select_day1, file = "select_day1.csv", row.names = FALSE)
write.csv(select_day2, file = "select_day2.csv", row.names = FALSE)
write.csv(select_day3, file = "select_day3.csv", row.names = FALSE)
