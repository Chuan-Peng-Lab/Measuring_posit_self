day3_process("phase_003")#修改phase_002
#记录单个被试subject well-being
day3_process<-function(phase){
filePath<-paste0("../../../Data/raw/day3/",phase,"/day3_",phase,".csv")
day3 <- read.csv(filePath, fileEncoding = "UTF-8")
#这行代码不是每次都需要，是本次数据有个被试输错被试编号
#day3$ParticipantID[day3$ParticipantID == 1] <- 306
#记录单个被试的IPC，内控感，-3~3，但是没有0，0~1,1~2,2~3
#记录单个被试的NPI
# NPI,1~0,2-1,3-0,4-0,5-1,6-1,7-0,8-0,9-1,10-0,11-0,12-1,13-0,14-1,15-0；NPI-16,全量表分数代表自恋的显性维度，得分0—15，分数越高，显性自恋水平越高；0是第一个选项，对代表自恋的选项进行计分为1，记录每个问题的第一个选项的分值为0还是1
# 记录day3的问卷的数据
day3_q <- day3 %>%
filter(trial_index == 0) %>%
select(ParticipantID, everything(), -c("subj_idx","success", "user_agent", "value", "responses", "item_order", "radio_event_ids", "radio_event_times", "key_event_times","mouse_event_times","straightlining","zigzagging","honeypot","question_order","internal_node_id","time_elapsed","trial_index","trial_type","response","stimulus","rt"))%>%
mutate(across(starts_with("IPC"), ~ case_when(. == 0 ~ 1, . == 1 ~ 2, . == 2 ~ 3, TRUE ~ .)))%>%
mutate(
NPI1 = ifelse(NPI1 == "0", 1, 0),
NPI3 = ifelse(NPI3 == "0", 1, 0),
NPI4 = ifelse(NPI4 == "0", 1, 0),
NPI7 = ifelse(NPI7 == "0", 1, 0),
NPI8 = ifelse(NPI8 == "0", 1, 0),
NPI10 = ifelse(NPI10 == "0", 1, 0),
NPI11 = ifelse(NPI11 == "0", 1, 0),
NPI13 = ifelse(NPI13 == "0", 1, 0),
NPI15 = ifelse(NPI15 == "0", 1, 0)
) %>%
merge(., subj_day0_phase_003[, c("ID", "subj_idx")], by = "subj_idx", all.x = TRUE)%>%#修改phase_002
select(-c("subj_idx"))
output_path <- paste0("../../../Data/clean/clean_day3/",phase,"/day3_q_",phase,".csv")
write.csv(day3_q, output_path)
}
day3_process("phase_003")#修改phase_002
#check out all '.csv' files in a folder, ‘..’ 表示返回上一级目录，因此 ../../.. 表示在当前工作目录的上两级目录下找到 "4.Analysis" 目录
list.files("../../../Data/raw/day3/phase_003/jsPsych",pattern = "\\.csv$", full.names = TRUE)
#汇总本轮day0所有被试的数据
combine_csv_files <- function(phase,firstnum, lastnum)
{  ##[批次号，输入文件列表的文件范围]
folder_path<-paste0("../../..//Data/raw/day3/",phase,"/jsPsych")
files <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
selected_files <- files[firstnum:lastnum] #输入文件列表的文件范围；起始编号：终止编号
combined_data <- NULL
for (file in files) {
tmp <- read.csv(file, header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")  # 逐个读取csv文件，fileEncoding可能为UTF-8 或 GBK
if (is.null(combined_data)) {
combined_data <- tmp
} else {
combined_data <- rbind(combined_data, tmp)
}
}
write.csv(combined_data, paste0( "../../../Data/raw/day3/",phase,"/day3_",phase,".csv"), row.names = FALSE)
}
# 使用示例，每次运行仅需修改此3个参数
combine_csv_files("phase_003",1,12)#修改phase_002
#记录单个被试subject well-being
day3_process<-function(phase){
filePath<-paste0("../../../Data/raw/day3/",phase,"/day3_",phase,".csv")
day3 <- read.csv(filePath, fileEncoding = "UTF-8")
#这行代码不是每次都需要，是本次数据有个被试输错被试编号
#day3$ParticipantID[day3$ParticipantID == 1] <- 306
#记录单个被试的IPC，内控感，-3~3，但是没有0，0~1,1~2,2~3
#记录单个被试的NPI
# NPI,1~0,2-1,3-0,4-0,5-1,6-1,7-0,8-0,9-1,10-0,11-0,12-1,13-0,14-1,15-0；NPI-16,全量表分数代表自恋的显性维度，得分0—15，分数越高，显性自恋水平越高；0是第一个选项，对代表自恋的选项进行计分为1，记录每个问题的第一个选项的分值为0还是1
# 记录day3的问卷的数据
day3_q <- day3 %>%
filter(trial_index == 0) %>%
select(ParticipantID, everything(), -c("subj_idx","success", "user_agent", "value", "responses", "item_order", "radio_event_ids", "radio_event_times", "key_event_times","mouse_event_times","straightlining","zigzagging","honeypot","question_order","internal_node_id","time_elapsed","trial_index","trial_type","response","stimulus","rt"))%>%
mutate(across(starts_with("IPC"), ~ case_when(. == 0 ~ 1, . == 1 ~ 2, . == 2 ~ 3, TRUE ~ .)))%>%
mutate(
NPI1 = ifelse(NPI1 == "0", 1, 0),
NPI3 = ifelse(NPI3 == "0", 1, 0),
NPI4 = ifelse(NPI4 == "0", 1, 0),
NPI7 = ifelse(NPI7 == "0", 1, 0),
NPI8 = ifelse(NPI8 == "0", 1, 0),
NPI10 = ifelse(NPI10 == "0", 1, 0),
NPI11 = ifelse(NPI11 == "0", 1, 0),
NPI13 = ifelse(NPI13 == "0", 1, 0),
NPI15 = ifelse(NPI15 == "0", 1, 0)
) %>%
merge(., subj_day0_phase_003[, c("ID", "subj_idx")], by = "subj_idx", all.x = TRUE)%>%#修改phase_002
select(-c("subj_idx"))
output_path <- paste0("../../../Data/clean/clean_day3/",phase,"/day3_q_",phase,".csv")
write.csv(day3_q, output_path)
}
day3_process("phase_003")#修改phase_002
#check out all '.csv' files in a folder, ‘..’ 表示返回上一级目录，因此 ../../.. 表示在当前工作目录的上两级目录下找到 "4.Analysis" 目录
list.files("../../../Data/raw/day3/phase_003/jsPsych",pattern = "\\.csv$", full.names = TRUE)
#汇总本轮day0所有被试的数据
combine_csv_files <- function(phase,firstnum, lastnum)
{  ##[批次号，输入文件列表的文件范围]
folder_path<-paste0("../../..//Data/raw/day3/",phase,"/jsPsych")
files <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
selected_files <- files[firstnum:lastnum] #输入文件列表的文件范围；起始编号：终止编号
combined_data <- NULL
for (file in files) {
tmp <- read.csv(file, header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")  # 逐个读取csv文件，fileEncoding可能为UTF-8 或 GBK
if (is.null(combined_data)) {
combined_data <- tmp
} else {
combined_data <- rbind(combined_data, tmp)
}
}
combined_data<-combined_data%>%
merge(., subj_day0_phase_003[, c("ID", "subj_idx")], by = "subj_idx", all.x = TRUE)%>%#修改phase_002
select(-c("subj_idx"))
write.csv(combined_data, paste0( "../../../Data/raw/day3/",phase,"/day3_",phase,".csv"), row.names = FALSE)
}
# 使用示例，每次运行仅需修改此3个参数
combine_csv_files("phase_003",1,12)#修改phase_002
#记录单个被试subject well-being
day3_process<-function(phase){
filePath<-paste0("../../../Data/raw/day3/",phase,"/day3_",phase,".csv")
day3 <- read.csv(filePath, fileEncoding = "UTF-8")
#这行代码不是每次都需要，是本次数据有个被试输错被试编号
#day3$ParticipantID[day3$ParticipantID == 1] <- 306
#记录单个被试的IPC，内控感，-3~3，但是没有0，0~1,1~2,2~3
#记录单个被试的NPI
# NPI,1~0,2-1,3-0,4-0,5-1,6-1,7-0,8-0,9-1,10-0,11-0,12-1,13-0,14-1,15-0；NPI-16,全量表分数代表自恋的显性维度，得分0—15，分数越高，显性自恋水平越高；0是第一个选项，对代表自恋的选项进行计分为1，记录每个问题的第一个选项的分值为0还是1
# 记录day3的问卷的数据
day3_q <- day3 %>%
filter(trial_index == 0) %>%
select(ParticipantID, everything(), -c("subj_idx","success", "user_agent", "value", "responses", "item_order", "radio_event_ids", "radio_event_times", "key_event_times","mouse_event_times","straightlining","zigzagging","honeypot","question_order","internal_node_id","time_elapsed","trial_index","trial_type","response","stimulus","rt"))%>%
mutate(across(starts_with("IPC"), ~ case_when(. == 0 ~ 1, . == 1 ~ 2, . == 2 ~ 3, TRUE ~ .)))%>%
mutate(
NPI1 = ifelse(NPI1 == "0", 1, 0),
NPI3 = ifelse(NPI3 == "0", 1, 0),
NPI4 = ifelse(NPI4 == "0", 1, 0),
NPI7 = ifelse(NPI7 == "0", 1, 0),
NPI8 = ifelse(NPI8 == "0", 1, 0),
NPI10 = ifelse(NPI10 == "0", 1, 0),
NPI11 = ifelse(NPI11 == "0", 1, 0),
NPI13 = ifelse(NPI13 == "0", 1, 0),
NPI15 = ifelse(NPI15 == "0", 1, 0)
)
output_path <- paste0("../../../Data/clean/clean_day3/",phase,"/day3_q_",phase,".csv")
write.csv(day3_q, output_path)
}
day3_process("phase_003")#修改phase_002
#记录单个被试subject well-being
day3_process<-function(phase){
filePath<-paste0("../../../Data/raw/day3/",phase,"/day3_",phase,".csv")
day3 <- read.csv(filePath, fileEncoding = "UTF-8")
#这行代码不是每次都需要，是本次数据有个被试输错被试编号
#day3$ParticipantID[day3$ParticipantID == 1] <- 306
#记录单个被试的IPC，内控感，-3~3，但是没有0，0~1,1~2,2~3
#记录单个被试的NPI
# NPI,1~0,2-1,3-0,4-0,5-1,6-1,7-0,8-0,9-1,10-0,11-0,12-1,13-0,14-1,15-0；NPI-16,全量表分数代表自恋的显性维度，得分0—15，分数越高，显性自恋水平越高；0是第一个选项，对代表自恋的选项进行计分为1，记录每个问题的第一个选项的分值为0还是1
# 记录day3的问卷的数据
day3_q <- day3 %>%
filter(trial_index == 0) %>%
select(ID, everything(), -c("success", "user_agent", "value", "responses", "item_order", "radio_event_ids", "radio_event_times", "key_event_times","mouse_event_times","straightlining","zigzagging","honeypot","question_order","internal_node_id","time_elapsed","trial_index","trial_type","response","stimulus","rt"))%>%
mutate(across(starts_with("IPC"), ~ case_when(. == 0 ~ 1, . == 1 ~ 2, . == 2 ~ 3, TRUE ~ .)))%>%
mutate(
NPI1 = ifelse(NPI1 == "0", 1, 0),
NPI3 = ifelse(NPI3 == "0", 1, 0),
NPI4 = ifelse(NPI4 == "0", 1, 0),
NPI7 = ifelse(NPI7 == "0", 1, 0),
NPI8 = ifelse(NPI8 == "0", 1, 0),
NPI10 = ifelse(NPI10 == "0", 1, 0),
NPI11 = ifelse(NPI11 == "0", 1, 0),
NPI13 = ifelse(NPI13 == "0", 1, 0),
NPI15 = ifelse(NPI15 == "0", 1, 0)
)
output_path <- paste0("../../../Data/clean/clean_day3/",phase,"/day3_q_",phase,".csv")
write.csv(day3_q, output_path)
}
day3_process("phase_003")#修改phase_002
day3_q <-read.csv("../../../Data/clean/clean_day3/phase_003/day3_q_phase_003.csv")#修改phase_002
day3_q  <- day3_q  %>%
rename(ability_rating = domain_rating_1,
physical_attraction = domain_rating_2,
material_wealth = domain_rating_3,
social_ability = domain_rating_4,
moral_rating=domain_rating_5,
)%>%
mutate(
phq_al = rowSums(select(., starts_with("phq")), na.rm = TRUE),
gad_al = rowSums(select(., starts_with("gad")), na.rm = TRUE),
selfclarity_al = rowSums(select(., starts_with("selfclarity")), na.rm = TRUE),
ses_al = rowSums(select(., starts_with("ses")), na.rm = TRUE),
coreself_al =rowSums(select(., starts_with("coreself")), na.rm = TRUE),
SGPS_al = rowSums(select(., starts_with("SGPS")), na.rm = TRUE),
hsns_al = rowSums(select(., starts_with("hsns")), na.rm = TRUE),
NPI_al = rowSums(select(., starts_with("NPI")), na.rm = TRUE),
swb_al = rowSums(select(., starts_with("swb")), na.rm = TRUE),
LOT_al = rowSums(select(., starts_with("LOT")), na.rm = TRUE),
IPC_al = (rowSums(select(., starts_with("IPC")), na.rm = TRUE)+24)
)%>%mutate(gad = case_when(
gad_al >= 0 & gad_al <= 4 ~ "无",
gad_al >= 5 & gad_al <= 9 ~ "轻度",
gad_al >= 10 & gad_al <= 14 ~ "中度",
gad_al >= 15 ~ "重度",
TRUE ~ NA_character_
))%>%
mutate(phq = case_when(
phq_al >= 0 & phq_al <= 4 ~ "无",
phq_al >= 5 & phq_al <= 9 ~ "轻度",
phq_al >= 10 & phq_al <= 14 ~ "中度",
phq_al >= 15 & phq_al <= 19 ~ "中重度",
phq_al >= 20  ~ "重度",
TRUE ~ NA_character_
))
subj_phase_003 <- unique(day3_q$ID)
print(subj_phase_003)
day2_q <-read.csv("../../../Data/clean/clean_day2/phase_003/day2_q_phase_003.csv")#修改phase_002
day0_q <-read.csv("../../../Data/clean/clean_day0/phase_003/day0_all_phase_003.csv")#修改phase_002
day1_q<-read.csv("../../../Data/clean/clean_day1/phase_003/day1_q_phase_003.csv")#修改phase_002
#合并day0到day2的问卷数据
day0t2_q<- merge(day0_q, day1_q, by = "ID", all = TRUE) %>%
merge(day2_q, by = "ID", all = TRUE)
# %>%filter(ID != "phase_002_subj_1" & ID != "phase_002_subj_3")#这行代码不是每次都需要，这是被试流失，去除流失的被试
#对合并day0到day2的问卷数据，进行总分计算
day0t2_q<- subset(day0t2_q, ID %in% subj_phase_003)%>%
mutate(
phq_al = rowSums(select(., starts_with("phq")), na.rm = TRUE),
gad_al = rowSums(select(., starts_with("gad")), na.rm = TRUE),
selfclarity_al = rowSums(select(., starts_with("selfclarity")), na.rm = TRUE),
ses_al = rowSums(select(., starts_with("ses")), na.rm = TRUE),
coreself_al =rowSums(select(., starts_with("coreself")), na.rm = TRUE),
SGPS_al = rowSums(select(., starts_with("SGPS")), na.rm = TRUE),
hsns_al = rowSums(select(., starts_with("hsns")), na.rm = TRUE),
NPI_al = rowSums(select(., starts_with("NPI")), na.rm = TRUE),
swb_al = rowSums(select(., starts_with("swb")), na.rm = TRUE),
LOT_al = rowSums(select(., starts_with("LOT")), na.rm = TRUE),
IPC_al = (rowSums(select(., starts_with("IPC")), na.rm = TRUE)+24)
)%>%mutate(gad = case_when(
gad_al >= 0 & gad_al <= 4 ~ "无",
gad_al >= 5 & gad_al <= 9 ~ "轻度",
gad_al >= 10 & gad_al <= 14 ~ "中度",
gad_al >= 15 ~ "重度",
TRUE ~ NA_character_
))%>%
mutate(phq = case_when(
phq_al >= 0 & phq_al <= 4 ~ "无",
phq_al >= 5 & phq_al <= 9 ~ "轻度",
phq_al >= 10 & phq_al <= 14 ~ "中度",
phq_al >= 15 & phq_al <= 19 ~ "中重度",
phq_al >= 20  ~ "重度",
TRUE ~ NA_character_
))
#选择要算重测信度的量表
questionnaires <- c("IPC_al", "LOT_al", "swb_al", "NPI_al", "hsns_al", "SGPS_al", "coreself_al", "ses_al", "selfclarity_al", "gad_al", "phq_al")
# 计算重测信度
# 存储计算的重测信度
reliabilities <- data.frame(questionnaire = character(0), reliability = numeric(0))
for (questionnaire in questionnaires) {
# 选择两次测量的数据，for循环
data1 <- day0t2_q [, c("ID", questionnaire)]
data2 <- day3_q [, c("ID", questionnaire)]
# 合并数据框
combined_data <- merge(data1, data2, by = "ID", suffixes = c("_1", "_2"))
# 计算重测信度，利用pearson积差相关
reliability <- cor(combined_data[, paste(questionnaire, "_1", sep = "")], combined_data[, paste(questionnaire, "_2", sep = "")],method = "pearson", use = "pairwise")
# 存储结果
reliabilities <- rbind(reliabilities, data.frame(questionnaire = questionnaire, reliability = reliability))
}
# 输出重测信度
print(reliabilities)
getwd() #查看工作目录，work directory is 'Measuring_Pos_Self/4.Analysis/Data/descrip/preprocess'
subj_day0_phase_002<-read.csv(list.files("../../../Data/raw/day0/phase_003/",pattern = "^SEE.*\\.csv$", full.names = TRUE), header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")%>%
slice(-1)%>%
select(-c("Subject.IDs","NodeId","X"))%>%#去除这些列
rename(
USERID=UserId,#脑岛ID
Time_day0=Time,#实验时间
religion=Info_Q1,#宗教
邮件地址 = Info_Q2,#邮箱
wechat = Info_Q3,#微信
region = Info_Q4,#地区
major = Info_Q5,#专业
left_hand = Info_Q6,#是否左撇子
refresh_rate = Info_Q7,#刷新率
resolution_ratio = Info_Q8#电脑分辨率
) %>%
mutate(Eligible="",#是否符合要求
Moneny="",#报酬金额
Paid_date="")%>%#付偿日期
arrange( USERID)%>%#将脑岛ID从低到高排序
mutate(No= row_number())%>%#按行依次编号
merge(.,day0_all[, c("No", "ID","ParticipantID","subj_idx")], by = "No", all.x = TRUE)%>%
mutate(姓名=ID)#将ID合并进文件
day0_all<-read.csv("../../../Data/clean/clean_day0/phase_003/day0_all_phase_003.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")
subj_day0_phase_002<-read.csv(list.files("../../../Data/raw/day0/phase_003/",pattern = "^SEE.*\\.csv$", full.names = TRUE), header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")%>%
slice(-1)%>%
select(-c("Subject.IDs","NodeId","X"))%>%#去除这些列
rename(
USERID=UserId,#脑岛ID
Time_day0=Time,#实验时间
religion=Info_Q1,#宗教
邮件地址 = Info_Q2,#邮箱
wechat = Info_Q3,#微信
region = Info_Q4,#地区
major = Info_Q5,#专业
left_hand = Info_Q6,#是否左撇子
refresh_rate = Info_Q7,#刷新率
resolution_ratio = Info_Q8#电脑分辨率
) %>%
mutate(Eligible="",#是否符合要求
Moneny="",#报酬金额
Paid_date="")%>%#付偿日期
arrange( USERID)%>%#将脑岛ID从低到高排序
mutate(No= row_number())%>%#按行依次编号
merge(.,day0_all[, c("No", "ID","ParticipantID","subj_idx")], by = "No", all.x = TRUE)%>%
mutate(姓名=ID)#将ID合并进文件
View(day0_all)
View(subj_day0_phase_003)
subj_day0_phase_002<-read.csv(list.files("../../../Data/raw/day0/phase_003/",pattern = "^SEE.*\\.csv$", full.names = TRUE), header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")%>%
slice(-1)%>%
select(-c("Subject.IDs","NodeId","X"))%>%#去除这些列
rename(
USERID=UserId,#脑岛ID
Time_day0=Time,#实验时间
religion=Info_Q1,#宗教
邮件地址 = Info_Q2,#邮箱
wechat = Info_Q3,#微信
region = Info_Q4,#地区
major = Info_Q5,#专业
left_hand = Info_Q6,#是否左撇子
refresh_rate = Info_Q7,#刷新率
resolution_ratio = Info_Q8#电脑分辨率
) %>%
mutate(Eligible="",#是否符合要求
Moneny="",#报酬金额
Paid_date="")%>%#付偿日期
arrange( USERID)%>%#将脑岛ID从低到高排序
mutate(No= row_number())
View(subj_day0_phase_002)
subj_day0_phase_002<- merge(.,day0_all[, c("No", "ID","ParticipantID","subj_idx")], by = "No", all.x = TRUE)
subj_day0_phase_002<- merge(subj_day0_phase_002,day0_all[, c("No", "ID","ParticipantID","subj_idx")], by = "No", all.x = TRUE)
View(day0_all)
subj_day0_phase_002<-read.csv(list.files("../../../Data/raw/day0/phase_003/",pattern = "^SEE.*\\.csv$", full.names = TRUE), header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")%>%
slice(-1)%>%
select(-c("Subject.IDs","NodeId","X"))%>%#去除这些列
rename(
USERID=UserId,#脑岛ID
Time_day0=Time,#实验时间
religion=Info_Q1,#宗教
邮件地址 = Info_Q2,#邮箱
wechat = Info_Q3,#微信
region = Info_Q4,#地区
major = Info_Q5,#专业
left_hand = Info_Q6,#是否左撇子
refresh_rate = Info_Q7,#刷新率
resolution_ratio = Info_Q8#电脑分辨率
) %>%
mutate(Eligible="",#是否符合要求
Moneny="",#报酬金额
Paid_date="")%>%#付偿日期
arrange( USERID)%>%#将脑岛ID从低到高排序
mutate(No= row_number())%>%#按行依次编号
merge(.,day0_all[, c("No", "ID","ParticipantID","subj_idx")], by = "No", all.x = TRUE)
#check out all '.csv' files in a folder, ‘..’ 表示返回上一级目录，因此 ../../.. 表示在当前工作目录的上两级目录下找到 "4.Analysis" 目录；通过更改批次号“phase_002”，查看对应的文件夹内的文件
list.files("../../../Data/raw/day0/phase_003/jsPsych",pattern = "\\.csv$", full.names = TRUE)
#汇总本轮day0所有被试的数据，##[批次号，输入文件列表的文件起始编号，终止编号]
combine_csv_files <- function(phase, firstnum, lastnum) {
folder_path<-paste0("../../../Data/raw/day0/",phase,"/jsPsych")
files <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
selected_files <- files[firstnum:lastnum] #输入文件列表的文件范围“起始编号：终止编号”
combined_data <- NULL
for (file in files) {
tmp <- read.csv(file, header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")  # 逐个读取csv文件，fileEncoding可能为UTF-8 或 GBK
if (is.null(combined_data)) {
combined_data <- tmp
} else {
combined_data <- rbind(combined_data, tmp)
}
}
output_file<-paste0("../../../Data/raw/day0/",phase,"/day0_",phase,".csv")
write.csv(combined_data,output_file, row.names = FALSE)
}
# 修改"phase_002"，替换成对应的批次
# 使用示例，每次运行仅需修改此3个参数
combine_csv_files("phase_003",1,15)
print(paste0("../../../Data/raw/day0/","phase_003","/day0_","phase_003",".csv"))
# 导入文件，修改文件地址“/phase_002/day0_all_phase_002.csv”中的批次号“phase_002”
day0_all<-read.csv("../../../Data/clean/clean_day0/phase_003/day0_all_phase_003.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8") %>%
rename(No=X)#重命名列
# 处理 day0 的function
##记录单个被试人口学信息
day0_process<-function(phase){
day0<-read.csv(paste0("../../../Data/raw/day0/",phase,"/day0_",phase,".csv"),fileEncoding = 'UTF-8')
#输出文件
## 记录被试 day0 完成所有问卷的数据，宽数据版
day0_all <- day0 %>%
filter(trial_index == 0) %>%  #选择第一行
select(subj_idx, ParticipantID,everything(), -c("rt", "stimulus", "response", "trial_type", "trial_index", "time_elapsed", "internal_node_id", "success","user_agent","accuracy","question_order","responses","item_order","radio_event_ids","radio_event_times","key_event_times","mouse_event_times","straightlining","zigzagging","honeypot","value"))%>%  #选择列
arrange(ParticipantID)%>%  #按ParticipantID从低到高排序
mutate(ID = paste0(phase,"_subj_", row_number()))%>% #生成新列ID
arrange(subj_idx)
output_path <- paste0("../../../Data/clean/clean_day0/",phase,"/day0_all_",phase, ".csv") #文件的输出路径
write.csv(day0_all,output_path)
}
## 运行范例，每次运行仅需要修改批次号"phase_002"
day0_process("phase_003")
# 导入文件，修改文件地址“/phase_002/day0_all_phase_002.csv”中的批次号“phase_002”
day0_all<-read.csv("../../../Data/clean/clean_day0/phase_003/day0_all_phase_003.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8") %>%
rename(No=X)#重命名列
# 导入文件，修改文件地址"../../../Data/raw/day0/phase_002/"中的批次号“phase_002”
subj_day0_phase_002<-read.csv(list.files("../../../Data/raw/day0/phase_003/",pattern = "^SEE.*\\.csv$", full.names = TRUE), header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")%>%
slice(-1)%>%
select(-c("Subject.IDs","NodeId","X"))%>%#去除这些列
rename(
USERID=UserId,#脑岛ID
Time_day0=Time,#实验时间
religion=Info_Q1,#宗教
邮件地址 = Info_Q2,#邮箱
wechat = Info_Q3,#微信
region = Info_Q4,#地区
major = Info_Q5,#专业
left_hand = Info_Q6,#是否左撇子
refresh_rate = Info_Q7,#刷新率
resolution_ratio = Info_Q8#电脑分辨率
) %>%
mutate(Eligible="",#是否符合要求
Moneny="",#报酬金额
Paid_date="")%>%#付偿日期
arrange( USERID)%>%#将脑岛ID从低到高排序
mutate(No= row_number())%>%#按行依次编号
merge(.,day0_all[, c("No", "ID","ParticipantID","subj_idx")], by = "No", all.x = TRUE)%>%
mutate("姓名"=ID)#将ID合并进文件
# 导出文件，输出的文件地址"../../../Data/raw/day0/phase_002/subj_day0_phase_002.xlsx",修改批次号“phase_002”
write.xlsx(subj_day0_phase_002, "../../../Data/raw/day0/phase_003/subj_day0_phase_003.xlsx")
#去掉该数据中的被试脑岛编号和被试姓名
day0_all<-day0_all%>%
select(-c("subj_name","subj_idx"))
write.csv(day0_all,"../../../Data/clean/clean_day0/phase_003/day0_all_phase_003.csv")#修改输出文件名内包含的批次号“phase_002”
write.csv(subj_day0_phase_002, "../../../Data/raw/day0/phase_003/subj_day0_phase_003.csv")
getwd() #查看工作目录，
# 导入文件，"../../../Data/raw/day1/pre2/",修改pre2，它为每批新建的文件夹
subj_day0_phase_003<-read.xlsx("../../../Data/raw/day0/phase_003/subj_day0_phase_003.xlsx")#修改phase_002
View(subj_day0_phase_003)
subj_day0_phase_002<-subj_day0_phase_002%>%
select(-c("姓名"))%>%
rename(email="邮箱地址")
View(subj_day0_phase_002)
subj_day0_phase_002<-subj_day0_phase_002%>%
select(-c("姓名"))%>%
rename(email=邮箱地址)
subj_day0_phase_002<-read.csv(list.files("../../../Data/raw/day0/phase_003/",pattern = "^SEE.*\\.csv$", full.names = TRUE), header = TRUE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")%>%
slice(-1)%>%
select(-c("Subject.IDs","NodeId","X"))%>%#去除这些列
rename(
USERID=UserId,#脑岛ID
Time_day0=Time,#实验时间
religion=Info_Q1,#宗教
email = Info_Q2,#邮箱
wechat = Info_Q3,#微信
region = Info_Q4,#地区
major = Info_Q5,#专业
left_hand = Info_Q6,#是否左撇子
refresh_rate = Info_Q7,#刷新率
resolution_ratio = Info_Q8#电脑分辨率
) %>%
mutate(Eligible="",#是否符合要求
Moneny="",#报酬金额
Paid_date="")%>%#付偿日期
arrange( USERID)%>%#将脑岛ID从低到高排序
mutate(No= row_number())%>%#按行依次编号
merge(.,day0_all[, c("No", "ID","ParticipantID","subj_idx")], by = "No", all.x = TRUE)#将ID合并进文件
View(subj_day0_phase_002)
View(subj_day0_phase_003)
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","email","wechat","Subject.Name","region"))
subj_day0_phase_003<-read.xlsx("../../../Data/raw/day0/phase_003/subj_day0_phase_003.xlsx")
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","email","wechat","Subject.Name","region"))
View(subj_day0_phase_003)
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","email","wechat","Subject.Name","region"))
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","e_mail","wechat","Subject.Name","region"))
mutate("姓名"=ID)%>%
rename("邮件地址"=e_mail,
"移动电话"=wechat,
"联系地址"=region
)
View(subj_email_phase_003)
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","e_mail","wechat","Subject.Name","region"))
mutate(姓名=ID)%>%
rename("邮件地址"=e_mail,
"移动电话"=wechat,
"联系地址"=region
)
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","e_mail","wechat","Subject.Name","region"))
rename("姓名"=ID,
"邮件地址"=e_mail,
"移动电话"=wechat,
"联系地址"=region
)
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","e_mail","wechat","Subject.Name","region"))
rename(姓名=ID,
邮件地址=e_mail,
移动电话=wechat,
联系地址=region
)
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","e_mail","wechat","Subject.Name","region"))
rename(#姓名=ID,
邮件地址=e_mail,
移动电话=wechat,
联系地址=region
)
subj_email_phase_003<-subj_day0_phase_003%>%
select(c("ID","e_mail","wechat","Subject.Name","region"))%>%
rename(姓名=ID,
邮件地址=e_mail,
移动电话=wechat,
联系地址=region
)
write.csv(subj_email_phase_003, "../../../Data/raw/day0/phase_003/subj_email_phase_003.csv")
