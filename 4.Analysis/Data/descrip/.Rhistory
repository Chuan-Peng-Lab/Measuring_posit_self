# 显示拼接后的图
print(ALT1_plot)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=con,y=acc, fill =con, colour = con))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('con')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 创建avg_rt的雨云图
rt_plot <- ggplot(data,aes(x=con,y=avg_rt, fill =con, colour = con))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =avg_rt),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('RT')+xlab('con')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2b: RT of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot | rt_plot)
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
ALT1_plot2_phase_003 <- subset(ALT1_phase_003, ID %in% subj_phase_003)%>%
# filter(., ID != "phase_003_subj_14")%>%#不需要每次有这行代码，本次去除是因为被试重复作答
mutate(ID = as.character(ID)) %>%
mutate(ParticipantID = as.character(ParticipantID)) %>%
mutate(rt=as.numeric(rt))%>% #转变被试编号和反应时类型为字符型与数值型
mutate(correct = ifelse(correct == "true", 1, ifelse(correct == "false", 0, NA)))%>% ##重编码correct，1对0错
filter(screen_id%in%c("formal_ALT1_1","formal_ALT1_2") )%>% #选择正式实验的数据
group_by(ID,con) %>%  #按被试与条件分组
summarise(
avg_rt = mean(rt, na.rm = TRUE),
max_rt = max(rt, na.rm = TRUE),
min_rt = min(rt, na.rm = TRUE),
sd_rt=sd(rt, na.rm = TRUE), #计算平均反应时
all_count=n(),#每个条件的总trial数量
row_count = sum(rt>=200 & rt <=1200, na.rm = TRUE),  #每个条件反应时符合条件的总数,舍弃按键太快和按键太慢的
correct_count = sum(correct == 1 & rt>=200 & rt <=1200, na.rm = TRUE),
acc = correct_count /all_count #计算正确率= 正确/总数
)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=con,y=acc, fill =con, colour = con))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('con')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 创建avg_rt的雨云图
rt_plot <- ggplot(data,aes(x=con,y=avg_rt, fill =con, colour = con))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =avg_rt),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('RT')+xlab('con')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2b: RT of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot | rt_plot)
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=con,y=acc, fill =con, colour = con))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('con')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 创建avg_rt的雨云图
rt_plot <- ggplot(data,aes(x=con,y=avg_rt, fill =con, colour = con))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =avg_rt),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('RT')+xlab('con')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2b: RT of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot | rt_plot)
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot2_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=con,y=acc, fill =con, colour = con))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('con')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot )
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot2_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=condition,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 创建avg_rt的雨云图
rt_plot <- ggplot(data,aes(x=condition,y=avg_rt, fill =condition, colour = condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =avg_rt),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('RT')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2b: RT of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot | rt_plot)
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot2_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
ALT1_plot2_phase_003 <- subset(ALT1_phase_003, ID %in% subj_phase_003)%>%
# filter(., ID != "phase_003_subj_14")%>%#不需要每次有这行代码，本次去除是因为被试重复作答
mutate(ID = as.character(ID)) %>%
mutate(ParticipantID = as.character(ParticipantID)) %>%
mutate(rt=as.numeric(rt))%>% #转变被试编号和反应时类型为字符型与数值型
mutate(correct = ifelse(correct == "true", 1, ifelse(correct == "false", 0, NA)))%>% ##重编码correct，1对0错
filter(screen_id%in%c("formal_ALT1_1","formal_ALT1_2") )%>% #选择正式实验的数据
group_by(ID,condition) %>%  #按被试与条件分组
summarise(
avg_rt = mean(rt, na.rm = TRUE),
max_rt = max(rt, na.rm = TRUE),
min_rt = min(rt, na.rm = TRUE),
sd_rt=sd(rt, na.rm = TRUE), #计算平均反应时
all_count=n(),#每个条件的总trial数量
row_count = sum(rt>=200 & rt <=1200, na.rm = TRUE),  #每个条件反应时符合条件的总数,舍弃按键太快和按键太慢的
correct_count = sum(correct == 1 & rt>=200 & rt <=1200, na.rm = TRUE),
acc = correct_count /all_count #计算正确率= 正确/总数
)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=condition,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 创建avg_rt的雨云图
rt_plot <- ggplot(data,aes(x=condition,y=avg_rt, fill =condition, colour = condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = con, y =avg_rt),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('RT')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2b: RT of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot | rt_plot)
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot2_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=condition,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 创建avg_rt的雨云图
rt_plot <- ggplot(data,aes(x=condition,y=avg_rt, fill =condition, colour = condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =avg_rt),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('RT')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2b: RT of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot | rt_plot)
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot2_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
View(ALT2_phase_003)
ALT2_plot_phase_003 <- subset(ALT2_phase_003, ID %in% subj_phase_003)%>%
# filter(., ID != "phase_003_subj_14")%>%#不需要每次有这行代码，本次去除是因为被试重复作答
mutate(ID = as.character(ID)) %>%
mutate(ParticipantID = as.character(ParticipantID)) %>%
mutate(rt=as.numeric(rt))%>% #转变被试编号和反应时类型为字符型与数值型
filter(screen_id%in%c("moral","ability") )%>% #选择正式实验的数据
group_by(ID,identity,person,domain) %>%  #按被试与条件分组
summarise(
avg_rt = mean(rt, na.rm = TRUE),
max_rt = max(rt, na.rm = TRUE),
min_rt = min(rt, na.rm = TRUE),
sd_rt=sd(rt, na.rm = TRUE), #计算平均反应时
all_count=n(),#每个条件的总trial数量
row_count = sum(rt>=200 & rt <=1200, na.rm = TRUE),  #每个条件反应时符合条件的总数,舍弃按键太快和按键太慢的
correct_count = sum(correct == 1 & rt>=200 & rt <=1200, na.rm = TRUE),
acc = correct_count /all_count #计算正确率= 正确/总数
)
View(ALT1_plot2_phase_003)
View(ALT2_plot_phase_003)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=condition,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 创建avg_rt的雨云图
rt_plot <- ggplot(data,aes(x=condition,y=avg_rt, fill =condition, colour = condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =avg_rt),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('RT')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2b: RT of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot / rt_plot)
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot2_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
acc_and_rt_plots2 <- function(data) {
# 创建acc的雨云图
acc_plot <- ggplot(data,aes(x=condition,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2a: ACC of ALT1")
# 创建avg_rt的雨云图
rt_plot <- ggplot(data,aes(x=condition,y=avg_rt, fill =condition, colour = condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =avg_rt),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('RT')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 2b: RT of ALT1")
# 使用patchwork拼接两个图
final_plot <- (acc_plot | rt_plot)
return(final_plot)
}
# 使用函数并传递ALT1_plot_phase_003作为参数
ALT1_plot2 <- acc_and_rt_plots2(ALT1_plot2_phase_003)
# 显示拼接后的图
print(ALT1_plot2)
ALT2_acc_plot <- function(data) {
# 创建acc的雨云图
acc_plot1 <- ggplot(data %>% filter(screen_id %in% c("moral")),aes(x=identity,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3a: ACC of ALT2_moral")
# 创建avg_rt的雨云图
acc_plot2 <- ggplot(data %>% filter(screen_id %in% c("ability")),aes(x=identity,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3b: ACC of ALT2_ability")
# 使用patchwork拼接两个图
final_plot <- (acc_plot1 / acc_plot2)
return(final_plot)
}
ALT2_acc_plot(ALT2_plot_phase_003)
ALT2_acc_plot <- function(data) {
# 创建acc的雨云图
acc_plot1 <- ggplot(data %>% filter(domain %in% c("moral")),aes(x=identity,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3a: ACC of ALT2_moral")
# 创建avg_rt的雨云图
acc_plot2 <- ggplot(data %>% filter(domain %in% c("ability")),aes(x=identity,y=acc, fill =condition, colour =condition))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = condition, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3b: ACC of ALT2_ability")
# 使用patchwork拼接两个图
final_plot <- (acc_plot1 / acc_plot2)
return(final_plot)
}
ALT2_acc_plot(ALT2_plot_phase_003)
ALT2_acc_plot <- function(data) {
# 创建acc的雨云图
acc_plot1 <- ggplot(data %>% filter(domain %in% c("moral")),aes(x=identity,y=acc, fill =identity, colour =identity))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = identity, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3a: ACC of ALT2_moral")
# 创建avg_rt的雨云图
acc_plot2 <- ggplot(data %>% filter(domain %in% c("ability")),aes(x=identity,y=acc, fill =identity, colour =identity))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = identity, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3b: ACC of ALT2_ability")
# 使用patchwork拼接两个图
final_plot <- (acc_plot1 / acc_plot2)
return(final_plot)
}
ALT2_acc_plot(ALT2_plot_phase_003)
ALT2_acc_plot <- function(data) {
# 创建acc的雨云图
acc_plot1 <- ggplot(data %>% filter(domain %in% c("moral")),aes(x=identity,y=acc, fill =identity, colour =identity))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = identity, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3a: ACC of ALT2_moral")
# 创建avg_rt的雨云图
acc_plot2 <- ggplot(data %>% filter(domain %in% c("ability")),aes(x=identity,y=acc, fill =identity, colour =identity))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = identity, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3b: ACC of ALT2_ability")
# 使用patchwork拼接两个图
final_plot <- (acc_plot1 | acc_plot2)
return(final_plot)
}
ALT2_acc_plot(ALT2_plot_phase_003)
ALT2_acc_plot <- function(data) {
# 创建acc的雨云图
acc_plot1 <- ggplot(data %>% filter(domain %in% c("moral")),aes(x=identity,y=acc, fill =identity, colour =identity))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = identity, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3a: ACC of ALT2_moral")
# 创建avg_rt的雨云图
acc_plot2 <- ggplot(data %>% filter(domain %in% c("ability")),aes(x=identity,y=acc, fill =identity, colour =identity))+
geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = identity, y =acc),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('Acc')+xlab('condition')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
facet_wrap(~person)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 3b: ACC of ALT2_ability")
# 使用patchwork拼接两个图
final_plot <- (acc_plot1 / acc_plot2)
return(final_plot)
}
ALT2_acc_plot(ALT2_plot_phase_003)
getwd() #查看工作目录，
#记录单个被试subject well-being
day2_process<-function(phase){
filePath<-paste0("../../../Data/raw/day2/",phase,"/day2_",phase,".csv")
day20 <- read.csv(filePath, fileEncoding = "UTF-8")
#这行代码不是每次都需要，是本次数据有个被试输错被试编号
#day20$ParticipantID[day20$ParticipantID == 1] <- 306
#记录被试的SRET
SRET <- day20 %>%
select(., c("subj_idx","ParticipantID", "Sex", "task_id", "screen_id", "person", "valence", "domain", "word", "math", "correct_response", "identity", "response", "responses", "rt", "correct")) %>%
filter(grepl("^SRET", task_id)) %>%
mutate(identity = case_when(
identity %in% c("朋友", "自己") ~ case_when(
identity == "朋友" ~ "friend",
identity == "自己" ~ "self"
),
TRUE ~ identity
)) %>%
mutate(person = case_when(
person %in% c("朋友", "自己") ~ case_when(
person == "朋友" ~ "friend",
person == "自己" ~ "self"
),
TRUE ~ person
)) %>%
mutate(correct = ifelse(
screen_id == "RJ_formal_2",
ifelse(identity == responses, 1, ifelse(identity != responses, 0, correct)),
correct
)) %>%
mutate(con = paste(person, valence, domain, sep = "_")) %>%
merge(., subj_day0_phase_003[, c("ID", "subj_idx")], by = "subj_idx", all.x = TRUE)%>%#修改phase_002
select(-c("subj_idx"))
#记录被试ALT正式的数据
ALT2 <- day20 %>%
select(c("subj_idx","ParticipantID", "Sex", "Word", "Word2", "task_id", "screen_id", "Image", "condition", "word", "identity", "response", "responses", "correct_response", "rt", "correct")) %>%
filter(!grepl("^SRET", task_id)) %>%
filter(!is.na(screen_id)) %>%
filter(!is.na(correct) & correct != "") %>%
mutate(correct = ifelse(response == "null", NA, ifelse(correct, 1, 0))) %>%
mutate(Image = case_when(
Image == "img/circle.png" ~ "circle",
Image == "img/diamond.png" ~ "diamond",
Image == "img/square.png" ~ "square",
Image == "img/triangle.png" ~ "triangle",
Image == "img/ellipse.png" ~ "ellipse",
Image == "img/hexagon.png" ~ "hexagon",
Image == "img/pentagon.png" ~ "pentagon",
Image == "img/trapezoid.png" ~ "trapezoid",
TRUE ~ Image
)) %>%
mutate(domain = case_when(
grepl("好|坏", condition) ~ "moral",
grepl("强|弱", condition) ~ "ability",
TRUE ~ NA_character_
),
valence = case_when(
grepl("好|强", condition) ~ "positive",
grepl("坏|弱", condition) ~ "negative",
TRUE ~ NA_character_
),
person = case_when(
grepl("我", condition) ~ "self",
grepl("他|她", condition) ~ "friend",
TRUE ~ NA_character_
)) %>%
mutate(con = paste(domain, person, identity, sep = "_")) %>%
merge(., subj_day0_phase_003[, c("ID", "subj_idx")], by = "subj_idx", all.x = TRUE)%>%#修改phase_002
select(-c("subj_idx"))
# 记录day2的问卷的数据
day2_q <- day20 %>%
filter(trial_index == 0) %>%
select(ParticipantID, everything(), -c("friend_name","rt", "stimulus", "response", "trial_type", "trial_index", "time_elapsed", "internal_node_id", "success","user_agent","question_order","responses","item_order","radio_event_ids","radio_event_times","key_event_times","mouse_event_times","straightlining","zigzagging","value","honeypot"))%>%
select( everything(), -c("timeout", "failed_images", "failed_audio", "failed_video", "view_history", "response_type", "key_press", "avg_frame_time","center_x","center_y","correct_response","correct","identity","Image","word","condition","task_id","screen_id","time_stamp","domain","valence","math","status","duration","Word","Word2","person"))%>%
mutate(across(starts_with("IPC"), ~ case_when(. == 0 ~ 1, . == 1 ~ 2, . == 2 ~ 3, TRUE ~ .)))%>%
merge(.,subj_day0_phase_003[, c("ID","subj_idx")], by = "subj_idx", all.x = TRUE)%>%#修改phase_002
select(-c("subj_idx"))
day20<-day20%>%
merge(.,subj_day0_phase_003[, c("ID","subj_idx")], by = "subj_idx",all.x = TRUE)%>%#修改phase_002
select(-c("subj_idx"))
output_path <- paste0("../../../Data/raw/day2/",phase,"/day2_",phase,".csv")
write.csv(day20, output_path)
output_path <- paste0("../../../Data/clean/clean_day2/",phase,"/SRET_",phase,".csv")
write.csv(SRET, output_path)
output_path <- paste0("../../../Data/clean/clean_day2/",phase,"/ALT2_",phase,".csv")
write.csv(ALT2, output_path)
output_path <- paste0("../../../Data/clean/clean_day2/",phase,"/day2_q_",phase,".csv")
write.csv(day2_q, output_path)
}
day2_process("phase_003")
