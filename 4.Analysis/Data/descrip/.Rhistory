select(-c("ID","birthday"))
head(day0_democr)
# 使用修改后的数据框进行绘图
describe( day0_democr)
plot_bar(day0_democr)
summary(day0_democr)
# 绘制age的频数分布直方图
ggplot(day0_democr, aes(x = age)) +
geom_bar() +
labs(title = "Age Frequency Distribution", x = "Age Group", y = "Frequency")
# 绘制obj_ses1的频数分布直方图
ggplot(day0_democr, aes(x = obj_ses1)) +
geom_bar() +
labs(title = "obj_ses1 Frequency Distribution", x = "obj_ses1", y = "Frequency")
# 绘制fri_ses2的频数分布直方图
ggplot(day0_democr, aes(x = fri_ses2)) +
geom_bar() +
labs(title = "fri_ses2 Frequency Distribution", x = "fri_ses2", y = "Frequency")
# 绘制sex的频数分布直方图
ggplot(day0_democr, aes(x = sex)) +
geom_bar() +
labs(title = "Sex Frequency Distribution", x = "Sex", y = "Frequency")
# 绘制fatherEdu的频数分布直方图
ggplot(day0_democr, aes(x = fatherEdu)) +
geom_bar() +
labs(title = "Father Education Frequency Distribution", x = "Father Education", y = "Frequency")
# 绘制motherEdu的频数分布直方图
ggplot(day0_democr, aes(x = motherEdu)) +
geom_bar() +
labs(title = "Mother Education Frequency Distribution", x = "Mother Education", y = "Frequency")
# 绘制FatherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = FatherOccupation)) +
geom_bar() +
labs(title = "Father Occupation Frequency Distribution", x = "Father Occupation", y = "Frequency")
# 绘制MotherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = MotherOccupation)) +
geom_bar() +
labs(title = "Mother Occupation Frequency Distribution", x = "Mother Occupation", y = "Frequency")
# 绘制income的频数分布直方图
ggplot(day0_democr, aes(x = income)) +
geom_bar() +
labs(title = "Income Frequency Distribution", x = "Income Group", y = "Frequency")
# 绘制age的频数分布直方图
ggplot(day0_democr, aes(x = age)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Age Frequency Distribution", x = "Age Group", y = "Frequency")
# 绘制obj_ses1的频数分布直方图
ggplot(day0_democr, aes(x = obj_ses1)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "obj_ses1 Frequency Distribution", x = "obj_ses1", y = "Frequency")
# 绘制fri_ses2的频数分布直方图
ggplot(day0_democr, aes(x = fri_ses2)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "fri_ses2 Frequency Distribution", x = "fri_ses2", y = "Frequency")
# 绘制sex的频数分布直方图
ggplot(day0_democr, aes(x = sex)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Sex Frequency Distribution", x = "Sex", y = "Frequency")
# 绘制fatherEdu的频数分布直方图
ggplot(day0_democr, aes(x = fatherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Education Frequency Distribution", x = "Father Education", y = "Frequency")
# 绘制motherEdu的频数分布直方图
ggplot(day0_democr, aes(x = motherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Education Frequency Distribution", x = "Mother Education", y = "Frequency")
# 绘制FatherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = FatherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Occupation Frequency Distribution", x = "Father Occupation", y = "Frequency")
# 绘制MotherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = MotherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Occupation Frequency Distribution", x = "Mother Occupation", y = "Frequency")
# 绘制income的频数分布直方图
ggplot(day0_democr, aes(x = income)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Income Frequency Distribution", x = "Income Group", y = "Frequency")
View(day0_democr)
# 绘制age的频数分布直方图
ggplot(day0_democr, aes(x = age)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Age Frequency Distribution", x = "Age Group", y = "Frequency")
# 绘制obj_ses1的频数分布直方图
ggplot(day0_democr, aes(x = obj_ses1)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "obj_ses1 Frequency Distribution", x = "obj_ses1", y = "Frequency")
# 绘制fri_ses2的频数分布直方图
ggplot(day0_democr, aes(x = fri_ses2)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "fri_ses2 Frequency Distribution", x = "fri_ses2", y = "Frequency")
# 绘制sex的频数分布直方图
ggplot(day0_democr, aes(x = sex)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Sex Frequency Distribution", x = "Sex", y = "Frequency")
# 绘制fatherEdu的频数分布直方图
ggplot(day0_democr, aes(x = fatherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Education Frequency Distribution", x = "Father Education", y = "Frequency")
# 绘制motherEdu的频数分布直方图
ggplot(day0_democr, aes(x = motherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Education Frequency Distribution", x = "Mother Education", y = "Frequency")
# 绘制FatherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = FatherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Occupation Frequency Distribution", x = "Father Occupation", y = "Frequency")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10, simplify = TRUE))
# 绘制age的频数分布直方图
ggplot(day0_democr, aes(x = age)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Age Frequency Distribution", x = "Age Group", y = "Frequency")
# 绘制obj_ses1的频数分布直方图
ggplot(day0_democr, aes(x = obj_ses1)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "obj_ses1 Frequency Distribution", x = "obj_ses1", y = "Frequency")
# 绘制fri_ses2的频数分布直方图
ggplot(day0_democr, aes(x = fri_ses2)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "fri_ses2 Frequency Distribution", x = "fri_ses2", y = "Frequency")
# 绘制sex的频数分布直方图
ggplot(day0_democr, aes(x = sex)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Sex Frequency Distribution", x = "Sex", y = "Frequency")
# 绘制fatherEdu的频数分布直方图
ggplot(day0_democr, aes(x = fatherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Education Frequency Distribution", x = "Father Education", y = "Frequency")
# 绘制motherEdu的频数分布直方图
ggplot(day0_democr, aes(x = motherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Education Frequency Distribution", x = "Mother Education", y = "Frequency")
# 绘制FatherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = FatherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Occupation Frequency Distribution", x = "Father Occupation", y = "Frequency")
# 绘制MotherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = MotherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Occupation Frequency Distribution", x = "Mother Occupation", y = "Frequency")
# 绘制income的频数分布直方图
ggplot(day0_democr, aes(x = income)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Income Frequency Distribution", x = "Income Group", y = "Frequency")
View(day0_democr)
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
# 绘制age的频数分布直方图
ggplot(day0_democr, aes(x = age)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Age Frequency Distribution", x = "Age Group", y = "Frequency")
# 绘制obj_ses1的频数分布直方图
ggplot(day0_democr, aes(x = obj_ses1)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "obj_ses1 Frequency Distribution", x = "obj_ses1", y = "Frequency")
# 绘制fri_ses2的频数分布直方图
ggplot(day0_democr, aes(x = fri_ses2)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "fri_ses2 Frequency Distribution", x = "fri_ses2", y = "Frequency")
# 绘制sex的频数分布直方图
ggplot(day0_democr, aes(x = sex)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Sex Frequency Distribution", x = "Sex", y = "Frequency")
# 绘制fatherEdu的频数分布直方图
ggplot(day0_democr, aes(x = fatherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Education Frequency Distribution", x = "Father Education", y = "Frequency")
# 绘制motherEdu的频数分布直方图
ggplot(day0_democr, aes(x = motherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Education Frequency Distribution", x = "Mother Education", y = "Frequency")
# 绘制FatherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = FatherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Occupation Frequency Distribution", x = "Father Occupation", y = "Frequency")
# 绘制MotherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = MotherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Occupation Frequency Distribution", x = "Mother Occupation", y = "Frequency")
# 绘制income的频数分布直方图
ggplot(day0_democr, aes(x = income)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Income Frequency Distribution", x = "Income Group", y = "Frequency")
# 选择ID列以及age到Fri_ses2之间的所有列
day0_democr <- day0_all %>%
select(ID, age:fri_ses2)%>%
mutate(
ID = as.character(ID),
age=case_when(
between(age, 18, 28) ~ "18~28",
between(age, 28, 38) ~ "28~38",
between(age, 38, 48) ~ "38~48",
between(age, 48, 59) ~ "48~59",
age>59~ ">59",
TRUE ~ as.character(age)
),
obj_ses1=as.character(obj_ses1),
fri_ses2=as.character(fri_ses2),
sex=case_when(
sex==0~"male",
sex==1~"female",
TRUE ~ as.character(sex)
) ) %>%
mutate(fatherEdu = case_when(
fatherEdu == 0 ~ "zero",
fatherEdu == 1 ~ "elementary",
fatherEdu == 2 ~ "junior",
fatherEdu == 3 ~ "senior",
fatherEdu == 4 ~ "college",
fatherEdu == 5 ~ "graduate",
TRUE ~ as.character(fatherEdu)  # 如果没有匹配到上述条件，保持不变
))%>%
mutate(motherEdu = case_when(
motherEdu == 0 ~ "zero",#没上学
motherEdu == 1 ~ "elementary",#小学
motherEdu == 2 ~ "junior",#初中
motherEdu == 3 ~ "senior",#高中，中专
motherEdu == 4 ~ "college",#大学（专科或本科）
motherEdu == 5 ~ "graduate",#研究生
TRUE ~ as.character(motherEdu)  # 如果没有匹配到上述条件，保持不变
))%>%
mutate(FatherOccupation = case_when(
FatherOccupation == 0 ~ "casual_laborer临时工",
FatherOccupation == 1 ~ "self_employed个体经营",
FatherOccupation == 2 ~ "general_management一般管理",
FatherOccupation == 3 ~ "middlel_management中层管理",
FatherOccupation == 4 ~ "high_management高级管理",
TRUE ~ as.character(FatherOccupation)  # 如果没有匹配到上述条件，保持不变
))%>%
mutate(MotherOccupation = case_when(
MotherOccupation == 0 ~ "casual_laborer临时工",
MotherOccupation == 1 ~ "self_employed个体经营",
MotherOccupation == 2 ~ "general_management一般管理",
MotherOccupation == 3 ~ "middle_management中层管理",
MotherOccupation == 4 ~ "high_management高级管理",
TRUE ~ as.character(MotherOccupation)  # 如果没有匹配到上述条件，保持不变
))%>%
mutate(income = case_when(
income == 0 ~ "zero",
income < 2000 ~ "<2000",
between(income, 2000, 5000) ~ "2000~5000",
between(income, 5000, 10000) ~ "5000~10000",
between(income, 10000, 30000) ~ "10000~30000",
between(income, 30000, 50000) ~ "30000~50000",
between(income, 50000, 100000) ~ "50000~100000",
between(income, 100000, 150000) ~ "100000~150000",
between(income, 150000, 200000) ~ "150000~200000",
income >= 200000 ~ "≥200000",
TRUE ~ as.character(income)  # 如果没有匹配的条件，保持不变
))%>%
select(-c("ID","birthday"))
head(day0_democr)
# 使用修改后的数据框进行绘图
describe( day0_democr)
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
# 绘制age的频数分布直方图
ggplot(day0_democr, aes(x = age)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Age Frequency Distribution", x = "Age Group", y = "Frequency")
# 绘制obj_ses1的频数分布直方图
ggplot(day0_democr, aes(x = obj_ses1)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "obj_ses1 Frequency Distribution", x = "obj_ses1", y = "Frequency")
# 绘制fri_ses2的频数分布直方图
ggplot(day0_democr, aes(x = fri_ses2)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "fri_ses2 Frequency Distribution", x = "fri_ses2", y = "Frequency")
# 绘制sex的频数分布直方图
ggplot(day0_democr, aes(x = sex)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Sex Frequency Distribution", x = "Sex", y = "Frequency")
# 绘制fatherEdu的频数分布直方图
ggplot(day0_democr, aes(x = fatherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Education Frequency Distribution", x = "Father Education", y = "Frequency")
# 绘制motherEdu的频数分布直方图
ggplot(day0_democr, aes(x = motherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Education Frequency Distribution", x = "Mother Education", y = "Frequency")
# 绘制FatherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = FatherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Occupation Frequency Distribution", x = "Father Occupation", y = "Frequency")
# 绘制MotherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = MotherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Occupation Frequency Distribution", x = "Mother Occupation", y = "Frequency")
# 绘制income的频数分布直方图
ggplot(day0_democr, aes(x = income)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Income Frequency Distribution", x = "Income Group", y = "Frequency")
# 选择ID列以及age到Fri_ses2之间的所有列
day0_democr <- day0_all %>%
select(ID, age:fri_ses2)%>%
mutate(
ID = as.character(ID),
age=case_when(
between(age, 18, 28) ~ "18~28",
between(age, 28, 38) ~ "28~38",
between(age, 38, 48) ~ "38~48",
between(age, 48, 59) ~ "48~59",
age>59~ ">59",
TRUE ~ as.character(age)
),
obj_ses1=as.character(obj_ses1),
fri_ses2=as.character(fri_ses2),
sex=case_when(
sex==0~"male",
sex==1~"female",
TRUE ~ as.character(sex)
) ) %>%
mutate(fatherEdu = case_when(
fatherEdu == 0 ~ "zero",
fatherEdu == 1 ~ "elementary",
fatherEdu == 2 ~ "junior",
fatherEdu == 3 ~ "senior",
fatherEdu == 4 ~ "college",
fatherEdu == 5 ~ "graduate",
TRUE ~ as.character(fatherEdu)  # 如果没有匹配到上述条件，保持不变
))%>%
mutate(motherEdu = case_when(
motherEdu == 0 ~ "zero",#没上学
motherEdu == 1 ~ "elementary",#小学
motherEdu == 2 ~ "junior",#初中
motherEdu == 3 ~ "senior",#高中，中专
motherEdu == 4 ~ "college",#大学（专科或本科）
motherEdu == 5 ~ "graduate",#研究生
TRUE ~ as.character(motherEdu)  # 如果没有匹配到上述条件，保持不变
))%>%
mutate(FatherOccupation = case_when(
FatherOccupation == 0 ~ "casual_laborer",#临时工
FatherOccupation == 1 ~ "self_employed",#个体经营
FatherOccupation == 2 ~ "general_management",#一般管理
FatherOccupation == 3 ~ "middlel_management",#中层管理
FatherOccupation == 4 ~ "high_management",#高级管理
TRUE ~ as.character(FatherOccupation)  # 如果没有匹配到上述条件，保持不变
))%>%
mutate(MotherOccupation = case_when(
MotherOccupation == 0 ~ "casual_laborer",#临时工
MotherOccupation == 1 ~ "self_employed",#个体经营
MotherOccupation == 2 ~ "general_management",#一般管理
MotherOccupation == 3 ~ "middle_management",#中层管理
MotherOccupation == 4 ~ "high_management",#高级管理
TRUE ~ as.character(MotherOccupation)  # 如果没有匹配到上述条件，保持不变
))%>%
mutate(income = case_when(
income == 0 ~ "zero",
income < 2000 ~ "<2000",
between(income, 2000, 5000) ~ "2000~5000",
between(income, 5000, 10000) ~ "5000~10000",
between(income, 10000, 30000) ~ "10000~30000",
between(income, 30000, 50000) ~ "30000~50000",
between(income, 50000, 100000) ~ "50000~100000",
between(income, 100000, 150000) ~ "100000~150000",
between(income, 150000, 200000) ~ "150000~200000",
income >= 200000 ~ "≥200000",
TRUE ~ as.character(income)  # 如果没有匹配的条件，保持不变
))%>%
select(-c("ID","birthday"))
head(day0_democr)
# 使用修改后的数据框进行绘图
describe( day0_democr)
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
# 绘制age的频数分布直方图
ggplot(day0_democr, aes(x = age)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Age Frequency Distribution", x = "Age Group", y = "Frequency")
# 绘制obj_ses1的频数分布直方图
ggplot(day0_democr, aes(x = obj_ses1)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "obj_ses1 Frequency Distribution", x = "obj_ses1", y = "Frequency")
# 绘制fri_ses2的频数分布直方图
ggplot(day0_democr, aes(x = fri_ses2)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "fri_ses2 Frequency Distribution", x = "fri_ses2", y = "Frequency")
# 绘制sex的频数分布直方图
ggplot(day0_democr, aes(x = sex)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Sex Frequency Distribution", x = "Sex", y = "Frequency")
# 绘制fatherEdu的频数分布直方图
ggplot(day0_democr, aes(x = fatherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Education Frequency Distribution", x = "Father Education", y = "Frequency")
# 绘制motherEdu的频数分布直方图
ggplot(day0_democr, aes(x = motherEdu)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Education Frequency Distribution", x = "Mother Education", y = "Frequency")
# 绘制FatherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = FatherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Father Occupation Frequency Distribution", x = "Father Occupation", y = "Frequency")
# 绘制MotherOccupation的频数分布直方图
ggplot(day0_democr, aes(x = MotherOccupation)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Mother Occupation Frequency Distribution", x = "Mother Occupation", y = "Frequency")
# 绘制income的频数分布直方图
ggplot(day0_democr, aes(x = income)) +
geom_bar() +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
labs(title = "Income Frequency Distribution", x = "Income Group", y = "Frequency")
# 假设你的数据框名为day0t3_q_reliability
sde_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("sde_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(sde_retest_reliability)
IM_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("IM_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(IM_retest_reliability)
phq_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("phq_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(phq_retest_reliability)
gad_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("gad_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(gad_retest_reliability)
swb_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("swb_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(swb_retest_reliability)
NPI_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("NPI"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(IM_retest_reliability)
ses_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("ses_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(ses_retest_reliability)
SGPS_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("SGPS_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(SGPS_retest_reliability)
selfclarity_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("selfclarity_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(selfclarity_retest_reliability)
LOT_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("LOT_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(LOT_retest_reliability)
hsns_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("hsns_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(hsns_retest_reliability)
moralSeImag_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("moralSeImag_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(moralSeImag_retest_reliability)
MorIden_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("MorIden_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(MorIden_retest_reliability)
IPC_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("IPC_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(IPC_retest_reliability)
coreself_retest_reliability <- day0t3_q_reliability %>%
select(starts_with("coreself_"), "ID", "time")%>%
testRetest(.,keys = NULL, id = "ID",lmer = FALSE,sort = TRUE)
print(coreself_retest_reliability)
View(day3_q_all)
